program =>
compoundstmt =>
{ stmts } =>
{ stmt stmts } =>
{ stmt } =>
{ assgstmt } =>
{ ID = arithexpr ; } =>
{ ID = multexpr arithexprprime ; } =>
{ ID = multexpr ; } =>
{ ID = simpleexpr multexprprime ; } =>
{ ID = simpleexpr ; } =>
{ ID = ( arithexpr ) ; } =>
{ ID = ( multexpr arithexprprime ) ; } =>
{ ID = ( multexpr - multexpr arithexprprime ) ; } =>
{ ID = ( multexpr - multexpr ) ; } =>
{ ID = ( multexpr - simpleexpr multexprprime ) ; } =>
{ ID = ( multexpr - simpleexpr ) ; } =>
{ ID = ( multexpr - ( arithexpr ) ) ; } =>
{ ID = ( multexpr - ( multexpr arithexprprime ) ) ; } =>
{ ID = ( multexpr - ( multexpr ) ) ; } =>
{ ID = ( multexpr - ( simpleexpr multexprprime ) ) ; } =>
{ ID = ( multexpr - ( simpleexpr ) ) ; } =>
{ ID = ( multexpr - ( NUM ) ) ; } =>
{ ID = ( simpleexpr multexprprime - ( NUM ) ) ; } =>
{ ID = ( simpleexpr - ( NUM ) ) ; } =>
{ ID = ( ( arithexpr ) - ( NUM ) ) ; } =>
{ ID = ( ( multexpr arithexprprime ) - ( NUM ) ) ; } =>
{ ID = ( ( multexpr + multexpr arithexprprime ) - ( NUM ) ) ; } =>
{ ID = ( ( multexpr + multexpr ) - ( NUM ) ) ; } =>
{ ID = ( ( multexpr + simpleexpr multexprprime ) - ( NUM ) ) ; } =>
{ ID = ( ( multexpr + simpleexpr ) - ( NUM ) ) ; } =>
{ ID = ( ( multexpr + ID ) - ( NUM ) ) ; } =>
{ ID = ( ( simpleexpr multexprprime + ID ) - ( NUM ) ) ; } =>
{ ID = ( ( simpleexpr + ID ) - ( NUM ) ) ; } =>
{ ID = ( ( ID + ID ) - ( NUM ) ) ; }